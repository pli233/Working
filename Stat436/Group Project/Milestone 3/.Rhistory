library(ggplot2)
# 确保你的数据框名字是 field_of_study
ggplot(data = field_of_study %>%
filter(!is.na(students))) +
geom_line(aes(x = year, y = students, group = major, color = major)) +
labs(title = "Students Count by Major Over Years",
x = "Year",
y = "Number of Students",
color = "Major") +
theme_minimal()+
theme(legend.position = "none") # 移除图例标题
# 计算每年每个专业的学生总数和占比
data_percentage <- field_of_study %>%
filter(!is.na(students)) %>%
group_by(year, major) %>%
summarise(students_sum = sum(students), .groups = 'drop') %>%
group_by(year) %>%
mutate(total_students = sum(students_sum),
percentage = students_sum / total_students * 100) %>%
ungroup()
# 绘制每个专业随年份变化的学生占比折线图
ggplot(data_percentage, aes(x = year, y = percentage, group = major, color = major)) +
geom_line() +
labs(title = "Percentage of Students by Major Over Years",
x = "Year",
y = "Percentage of Total Students",
color = "Major") +
theme_minimal() +
theme(legend.position = "bottom")  # 将图例放在底部以避免拥挤
# 计算每年每个专业的学生总数和占比
data_percentage <- field_of_study %>%
filter(!is.na(students)) %>%
group_by(year, major) %>%
summarise(students_sum = sum(students), .groups = 'drop') %>%
group_by(year) %>%
mutate(total_students = sum(students_sum),
percentage = students_sum / total_students * 100) %>%
ungroup()
# 绘制每个专业随年份变化的学生占比折线图
ggplot(data_percentage, aes(x = year, y = percentage, group = major, color = major)) +
geom_line() +
labs(title = "Percentage of Students by Major Over Years",
x = "Year",
y = "Percentage of Total Students",
color = "Major") +
theme_minimal() +
theme(legend.position = "none")  # 将图例放在底部以避免拥挤
library(shiny); runApp('field_of_study.R')
runApp('field_of_study.R')
runApp('field_of_study.R')
runApp('field_of_study.R')
runApp('field_of_study.R')
runApp('field_of_study.R')
runApp('field_of_study.R')
runApp('field_of_study.R')
runApp('field_of_study.R')
# Set global chunk options to suppress warnings and messages for a cleaner output
knitr::opts_chunk$set(warnings = FALSE, message = FALSE)
# Load necessary libraries for data manipulation, visualization, and modeling
library(dplyr)
library(tidyverse)
library(ggplot2)
library(tidymodels)
library(broom)
library(tidytext)
#2. Create Function to preprocess datasets by separating 'year' column
preprocess_dataset <- function(data) {
filtered_data <- data %>% separate(year, sep = "/", into = "year", convert = TRUE, extra = "drop")
return(filtered_data)
}
#3. Data Preprocess
source_of_fund <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/source_of_fund.csv"))
#3.2 field_of_study
field_of_study <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/field_of_study.csv"))
#3.3 map_data
origin <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/origin.csv"))
#3.3 map_data
academic_detail <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/academic_detail.csv"))
# 计算每年每个专业的学生总数和占比
data_percentage <- field_of_study %>%
filter(!is.na(students)) %>%
group_by(year, major) %>%
summarise(students_sum = sum(students), .groups = 'drop') %>%
group_by(year) %>%
mutate(total_students = sum(students_sum),
percentage = students_sum / total_students * 100) %>%
ungroup()
# 绘制每个专业随年份变化的学生占比折线图
ggplot(data_percentage, aes(x = year, y = percentage, group = major, color = major)) +
geom_line() +
labs(title = "Percentage of Students by Major Over Years",
x = "Year",
y = "Percentage of Total Students",
color = "Major") +
theme_minimal() +
theme(legend.position = "none")  # 将图例放在底部以避免拥挤
# Set global chunk options to suppress warnings and messages for a cleaner output
knitr::opts_chunk$set(warnings = FALSE, message = FALSE)
# Load necessary libraries for data manipulation, visualization, and modeling
library(dplyr)
library(tidyverse)
library(ggplot2)
library(tidymodels)
library(broom)
library(tidytext)
#2. Create Function to preprocess datasets by separating 'year' column
preprocess_dataset <- function(data) {
filtered_data <- data %>% separate(year, sep = "/", into = "year", convert = TRUE, extra = "drop")
return(filtered_data)
}
#3. Data Preprocess
source_of_fund <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/source_of_fund.csv"))
#3.2 field_of_study
field_of_study <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/field_of_study.csv"))
#3.3 map_data
origin <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/origin.csv"))
#3.3 map_data
academic_detail <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/academic_detail.csv"))
View(academic_detail)
library(shiny); runApp('field_of_study.R')
library(shiny); runApp('K:/Working/Stat436/Group Project/Milestone 2/test.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
data("World")
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/test.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/test.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/test.R')
runApp('field_of_study.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/test.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/test.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/test.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
# Set global chunk options to suppress warnings and messages for a cleaner output
knitr::opts_chunk$set(warnings = FALSE, message = FALSE)
# Load necessary libraries for data manipulation, visualization, and modeling
library(dplyr)
library(tidyverse)
library(ggplot2)
library(tidymodels)
library(broom)
library(tidytext)
library(ggplot2)
# Sample data
data <- data.frame(
source_of_fund = c("Current Employment", "Foreign Government or University", "Personal and Family", "U.S. College or University", "Other"),
students = c(150, 250, 400, 300, 100)
)
# Calculate percentages and labels
data <- data %>%
mutate(
percentage = round(students / sum(students) * 100, 2),
label = paste(source_of_fund, ": ", percentage, "%", sep = "")
)
# Plot
ggplot(data, aes(x = "", y = percentage, fill = source_of_fund)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void() +
geom_text(aes(label = label, y = cumsum(percentage) - 0.5 * percentage),
color = "black", size = 3, position = position_stack(vjust = 0.5))
library(ggplot2)
# Sample data
data <- data.frame(
source_of_fund = c("Current Employment", "Foreign Government or University", "Personal and Family", "U.S. College or University", "Other"),
students = c(150, 250, 400, 300, 100)
)
# Calculate percentages and labels
data <- data %>%
mutate(
percentage = round(students / sum(students) * 100, 2),
label = paste(source_of_fund, ": ", percentage, "%", sep = "")
)
# Plot
ggplot(data, aes(x = "", y = percentage, fill = source_of_fund)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void() +
geom_text(aes(label = label, y = cumsum(percentage) - 0.5 * percentage),
color = "black", size = 3, position = position_stack(vjust = 0.5)) +
geom_segment(aes(xend = 0, yend = 0, x = 1, y = cumsum(percentage) - 0.5 * percentage),
color = "black", size = 0.25)
library(ggplot2)
# Sample data
data <- data.frame(
source_of_fund = c("Current Employment", "Foreign Government or University", "Personal and Family", "U.S. College or University", "Other"),
students = c(150, 250, 400, 300, 100)
)
# Calculate percentages and labels
data <- data %>%
mutate(
percentage = round(students / sum(students) * 100, 2),
label = paste(source_of_fund, ": ", percentage, "%", sep = "")
)
# Plot
ggplot(data, aes(x = "", y = percentage, fill = source_of_fund)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void() +
geom_text(aes(label = label, y = cumsum(percentage) - 0.5 * percentage),
color = "black", size = 3, position = position_stack(vjust = 0.5)) +
geom_segment(aes(xend = 0, yend = 0, x = 1, y = cumsum(percentage) - 0.5 * percentage),
color = "black", size = 0.25)
# 假设数据
data <- data.frame(
source_of_fund = c("Current Employment", "Foreign Government or University", "Personal and Family", "U.S. College or University", "Other"),
students = c(150, 250, 400, 300, 100)
)
# 计算百分比
data <- data %>%
mutate(
percentage = round(students / sum(students) * 100, 2),
label = paste(source_of_fund, percentage, "%", sep=": ")
)
# 创建饼图
ggplot(data, aes(x = "", y = percentage, fill = source_of_fund)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +  # 确保使用 theta = "y"
theme_void() +
geom_text(aes(label = label, y = cumsum(percentage) - 0.5 * percentage), size = 3)
# 假设数据
data <- data.frame(
source_of_fund = c("Current Employment", "Foreign Government or University", "Personal and Family", "U.S. College or University", "Other"),
students = c(150, 250, 400, 300, 100)
)
# 计算百分比
data <- data %>%
mutate(
percentage = round(students / sum(students) * 100, 2),
label = paste(source_of_fund, percentage, "%", sep=": ")
)
# 创建饼图
# Add lines if the labels work well
ggplot(data, aes(x = "", y = percentage, fill = source_of_fund)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void() +
geom_text(aes(label = label, y = cumsum(percentage) - 0.5 * percentage),
color = "black", size = 3, position = position_stack(vjust = 0.5)) +
geom_segment(aes(xend = 0, yend = 0, x = 1, y = cumsum(percentage) - 0.5 * percentage),
color = "black", size = 0.25)
# 假设数据
data <- data.frame(
source_of_fund = c("Current Employment", "Foreign Government or University", "Personal and Family", "U.S. College or University", "Other"),
students = c(150, 250, 400, 300, 100)
)
# 计算百分比
data <- data %>%
mutate(
percentage = round(students / sum(students) * 100, 2),
label = paste(source_of_fund, percentage, "%", sep=": ")
)
# 创建饼图
ggplot(data, aes(x = "", y = percentage, fill = source_of_fund)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +  # 确保使用 theta = "y"
theme_void() +
geom_text(aes(label = label, y = cumsum(percentage) - 0.5 * percentage), size = 3)
# 假设数据
data <- data.frame(
source_of_fund = c("Current Employment", "Foreign Government or University", "Personal and Family", "U.S. College or University", "Other"),
students = c(150, 250, 400, 300, 100)
)
# 计算百分比并添加中点角度
data <- data %>%
mutate(
percentage = round(students / sum(students) * 100, 2),
label = paste(source_of_fund, percentage, "%", sep=": "),
# Calculate mid angle for labels
mid_angle = cumsum(lag(percentage, default = 0)) + 0.5 * percentage
)
# 创建饼图
ggplot(data, aes(x = "", y = percentage, fill = source_of_fund)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +  # 使用 theta = "y" 绘制饼图
theme_void() +  # 移除所有默认主题元素
geom_text(aes(label = label, angle = mid_angle), size = 3,
position = position_identity(),
hjust = ifelse(data$mid_angle < 180, 1.2, -0.2),
vjust = ifelse(data$mid_angle < 180, -0.5, -0.5),
color = "black") +
theme(axis.text.x = element_blank(), axis.ticks = element_blank())  # 隐藏坐标轴标记和刻度
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
library(plotly)
library(dplyr)
# 示例数据
data <- data.frame(
source_of_fund = c("Current Employment", "Foreign Government or University", "Personal and Family", "U.S. College or University", "Other"),
students = c(150, 250, 400, 300, 100)
)
# 预处理数据
data <- data %>%
mutate(
percentage = round(students / sum(students) * 100, 1),
label = paste(source_of_fund, percentage, "%", sep=" ")
)
# 生成 Plotly 饼图
p <- plot_ly(data, labels = ~source_of_fund, values = ~students, type = 'pie',
textinfo = 'label+percent', hoverinfo = 'label+percent', text = ~label,
marker = list(colors = RColorBrewer::brewer.pal(8, "Set3"))) %>%
layout(title = 'Source of Fund')
# 查看饼图
p
library(plotly)
library(dplyr)
# 示例数据
data <- data.frame(
source_of_fund = c("Current Employment", "Foreign Government or University", "Personal and Family", "U.S. College or University", "Other"),
students = c(150, 250, 400, 300, 100)
)
# 预处理数据
data <- data %>%
mutate(
percentage = round(students / sum(students) * 100, 1),
label = paste(source_of_fund, percentage, "%", sep=" ")
)
# 生成 Plotly 饼图
p <- plot_ly(data, labels = ~source_of_fund, values = ~students, type = 'pie',
textinfo = 'label+percent', hoverinfo = 'label+percent', text = ~label,
marker = list(colors = RColorBrewer::brewer.pal(8, "Set3"))) %>%
layout(title = 'Source of Fund')
# 查看饼图
p
#3. Data Preprocess
source_of_fund <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/source_of_fund.csv"))
# Set global chunk options to suppress warnings and messages for a cleaner output
knitr::opts_chunk$set(warnings = FALSE, message = FALSE)
# Load necessary libraries for data manipulation, visualization, and modeling
library(dplyr)
library(tidyverse)
library(ggplot2)
library(tidymodels)
library(broom)
library(tidytext)
#2. Create Function to preprocess datasets by separating 'year' column
preprocess_dataset <- function(data) {
filtered_data <- data %>% separate(year, sep = "/", into = "year", convert = TRUE, extra = "drop")
return(filtered_data)
}
#3. Data Preprocess
source_of_fund <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/source_of_fund.csv"))
#3.2 field_of_study
field_of_study <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/field_of_study.csv"))
#3.3 map_data
origin <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/origin.csv"))
#3.3 map_data
academic_detail <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/academic_detail.csv"))
library(plotly)
library(dplyr)
# 示例数据
data <- data.frame(
source_of_fund = c("Current Employment", "Foreign Government or University", "Personal and Family", "U.S. College or University", "Other"),
students = c(150, 250, 400, 300, 100)
)
# 预处理数据
data <- data %>%
mutate(
percentage = round(students / sum(students) * 100, 1),
label = paste(source_of_fund, percentage, "%", sep=" ")
)
# 生成 Plotly 饼图
p <- plot_ly(data, labels = ~source_of_fund, values = ~students, type = 'pie',
textinfo = 'label+percent', hoverinfo = 'label+percent', text = ~label,
marker = list(colors = RColorBrewer::brewer.pal(8, "Set3"))) %>%
layout(title = 'Source of Fund')
# 查看饼图
p
View(source_of_fund)
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
library(plotly)
library(dplyr)
source_of_fund%>%
filter(selected) %>%
group_by(source_of_fund) %>%
summarize(students = sum(students)) %>%
mutate(percentage = round(students / sum(students) * 100, 1))  # 计算百分比
# Set global chunk options to suppress warnings and messages for a cleaner output
knitr::opts_chunk$set(warnings = FALSE, message = FALSE)
# Load necessary libraries for data manipulation, visualization, and modeling
library(dplyr)
library(tidyverse)
library(ggplot2)
library(tidymodels)
library(broom)
library(tidytext)
#2. Create Function to preprocess datasets by separating 'year' column
preprocess_dataset <- function(data) {
filtered_data <- data %>% separate(year, sep = "/", into = "year", convert = TRUE, extra = "drop")
return(filtered_data)
}
#3. Data Preprocess
source_of_fund <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/source_of_fund.csv"))
#3.2 field_of_study
field_of_study <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/field_of_study.csv"))
#3.3 map_data
origin <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/origin.csv"))
#3.3 map_data
academic_detail <- preprocess_dataset(read_csv("https://raw.githubusercontent.com/pli233/Working/main/Stat436/Group%20Project/data/academic_detail.csv"))
library(plotly)
library(dplyr)
source_of_fund%>%
filter(selected) %>%
group_by(source_of_fund) %>%
summarize(students = sum(students)) %>%
mutate(percentage = round(students / sum(students) * 100, 1))  # 计算百分比
library(plotly)
library(dplyr)
source_of_fund%>%
group_by(source_of_fund) %>%
summarize(students = sum(students)) %>%
mutate(percentage = round(students / sum(students) * 100, 1))  # 计算百分比
plot_ly(source_of_fund, labels = ~source_of_fund, values = ~students, type = 'pie',
textinfo = 'label+percent', hoverinfo = 'label+percent',
text = ~paste(source_of_fund, ": ", percentage, "%"),
marker = list(colors = RColorBrewer::brewer.pal(8, "Set3"))) %>%
layout(title = 'Source of Fund Distribution')
library(plotly)
library(dplyr)
source_of_fund <- source_of_fund%>%
group_by(source_of_fund) %>%
summarize(students = sum(students)) %>%
mutate(percentage = round(students / sum(students) * 100, 1))  # 计算百分比
plot_ly(source_of_fund, labels = ~source_of_fund, values = ~students, type = 'pie',
textinfo = 'label+percent', hoverinfo = 'label+percent',
text = ~paste(source_of_fund, ": ", percentage, "%"),
marker = list(colors = RColorBrewer::brewer.pal(8, "Set3"))) %>%
layout(title = 'Source of Fund Distribution')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('field_of_study.R')
runApp('field_of_study.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/test.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
library(plotly)
library(dplyr)
source_of_fund <- source_of_fund%>%
group_by(source_of_fund) %>%
summarize(students = sum(students)) %>%
mutate(percentage = round(students / sum(students) * 100, 1))  # 计算百分比
print(source_of_fund)
plot_ly(source_of_fund, labels = ~source_of_fund, values = ~students, type = 'pie',
textinfo = 'label+percent', hoverinfo = 'label+percent',
text = ~paste(source_of_fund, ": ", percentage, "%"),
marker = list(colors = RColorBrewer::brewer.pal(8, "Set3"))) %>%
layout(title = 'Source of Fund Distribution')
clear
clean
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
academic_detail
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
academic_detail
View(academic_detail)
View(field_of_study)
View(academic_detail)
academic_detail
# Create a grouped bar chart
plot <- academic_detail %>%
group_by(year, academic_level) %>%
summarise(total_students = sum(students), .groups = 'drop') %>%
plot_ly(x = ~year, y = ~total_students, type = 'bar', color = ~academic_level,
colors = RColorBrewer::brewer.pal(8, "Set2")) %>%
layout(yaxis = list(title = 'Number of Students'),
barmode = 'stack',
xaxis = list(title = 'Year'),
title = 'Students Distribution by Academic Level Over Years')
# Display the plot
plot
academic_detail
# Create a grouped bar chart with custom hover text
plot <- academic_detail %>%
group_by(year, academic_level) %>%
summarise(total_students = sum(students), .groups = 'drop') %>%
mutate(hover_text = paste("Year: ", year,
"<br>Academic Level: ", academic_level,
"<br>Students: ", total_students)) %>%
plot_ly(x = ~year, y = ~total_students, type = 'bar', color = ~academic_level,
colors = RColorBrewer::brewer.pal(8, "Set2"),
text = ~hover_text, hoverinfo = "text") %>%
layout(yaxis = list(title = 'Number of Students'),
barmode = 'stack',
xaxis = list(title = 'Year'),
title = 'Students Distribution by Academic Level Over Years')
# Display the plot
plot
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
View(field_of_study)
runApp('K:/Working/Stat436/Group Project/Milestone 2/Project Milestone2_Shiny.R')
